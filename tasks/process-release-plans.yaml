apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: process-release-plans
  namespace: japower-tenant
spec:
  workspaces:
    - name: output
  stepTemplate:
    env:
      - name: HOME
        value: /workspace
    image: quay.io/konflux-ci/appstudio-utils:48c311af02858e2422d6229600e9959e496ddef1@sha256:91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8
  params:
    - name: releases
      type: array
      description: JSON string of release configurations
  results:
    - name: component-release-plans
      description: List of component release plan file paths
    - name: fbc-release-plans
      description: List of fbc release plan file paths
  steps:
    - name: validate-kind
      workingDir: /workspace/output/source
      script: |
        #!/bin/bash
        set -euo pipefail

        validate_kind() {
          local dir=$1

          if [ -n "$dir" ] && [ -d "$dir" ]; then
            for file in "$dir"/*.yaml; do
              if [ -f "$file" ]; then
                echo "Validating kind in file: $file"
                KIND=$(yq e '.kind' "$file")
                if [ "$KIND" != "ReleasePlan" ]; then
                  echo "Error: File $file has kind $KIND, expected ReleasePlan"
                  exit 1
                fi
              fi
            done
          fi
        }

        validate_kind "$(params.component-release-plan-dir)"
        validate_kind "$(params.fbc-release-plan-dir)"

    - name: gather-file-paths
      workingDir: /workspace/output/source
      script: |
        #!/bin/bash
        set -euo pipefail

        list_files() {
          local dir=$1
          local result=$2
          if [ -n "$dir" ] && [ -d "$dir" ]; then
            files=$(find "$dir" -name '*.yaml' -print | jq -R -s 'split("\n")[:-1]')
            echo "Found Release Plans:"
            echo "$files" | jq '.'
            echo -n "$files" > "$result"
          else
            echo "No files found in $dir"
            echo -n "[]" > "$result"
          fi
        }

        list_files "$(params.component-release-plan-dir)" "$(results.component-release-plans.path)"
        list_files "$(params.fbc-release-plan-dir)" "$(results.fbc-release-plans.path)"

## Other steps can be defined here for extra processing or validation
